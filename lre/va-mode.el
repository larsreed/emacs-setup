;; Mode for converting SPE
;; Author:		Lars Reed <Lars@kalars.net>
;; Version:		1.3

(require 'xml-mode)
(require 'derived)

(defvar outline-regexp nil)
(defvar outline-heading-end-regexp nil)
(defvar outline-level nil)

(define-derived-mode va-mode xml-mode "VA" nil
;; (define-key va-mode-map [menu-bar sgml va]
;;   (cons "VA" ...))
  )


(defun lre-fixup-spe-dok ()
  (interactive "*")
  (goto-char (point-min))
  (save-excursion
    (let (p1 pat)
      (forward-line 3)
      (setq p1 (point))
      (end-of-line)
      (setq pat (buffer-substring p1 (point)))
      (beginning-of-line 5)
      (kill-region (point-min) (point))
      (while (search-forward pat nil t)
	(save-excursion
	  (beginning-of-line -9)
	  (setq p1 (point)))
	(beginning-of-line 5)
	(kill-region p1 (point)))
      (goto-char (point-max))
      (forward-word -6)
      (beginning-of-line 2)
      (kill-region (point) (point-max))))
  (save-excursion (replace-regexp "\n\n" "\n"))
  (save-excursion (replace-regexp "\\([^\n]\n\\)\\([^\n \t]\\)" "\\1\n\\2"))
  (save-excursion (replace-regexp "\\(     o\t\\) " "\\1"))
  (save-excursion (replace-regexp "\\(-[-a-zA-Z0-9]\t  \\) " "\\1"))
  )

(defmacro sub-spe-konv (from to)
  "Makro som interaktivt bytter ut FROM med TO i hele fila."
  `(save-excursion (goto-char (point-min)) (query-replace-regexp ,from ,to)))

(defun lre-spe-konv ()
  "Interaktiv bytting i *.VA-filer."
  (interactive "*")
  (if (and (string-match "dok" (buffer-name))
	   (y-or-n-p "Fixdok? "))
      (lre-fixup-spe-dok))
  (sub-spe-konv "@" "@@")
  (sub-spe-konv (read-from-minibuffer "Scriptnavn: "
				      (downcase (lre-buffer-name)))
		"@I@")
  (sub-spe-konv (concat "$" "Id" "$") "@I_VER@")
  (sub-spe-konv "/tmp" "@TMPDIR@")
  (sub-spe-konv "/dev/null" "@DEV_NULL@")
  (sub-spe-konv "/dev/tty" "@DEV_TTY@")
  (sub-spe-konv "$USER" "$@LOGNAME@")
  (sub-spe-konv "&Spehome;" "@TOOL_HOME@")
  (sub-spe-konv "SPEsect" "@MAN_SECTION@")
  (sub-spe-konv "nawk" "awk")
  (sub-spe-konv "FEDEFS" "FEDefs")
  (sub-spe-konv "spegloss.htm" "@GLOSS_FILE@")
  (sub-spe-konv "SPE_HOME" "@TOOL_HOME@")
  (sub-spe-konv "PROJ_HOME" "@PROJ_HOME@")
  (sub-spe-konv "MAKE_HOME" "@MAKE_HOME@")
  (sub-spe-konv "$SPEMORE" "More")
  (sub-spe-konv "SPE" "@NAME@")
  (sub-spe-konv "spe" "@SNAME_PFX@")
  (sub-spe-konv "spe" "@SNAME@")
  (sub-spe-konv "$@TOOL_HOME@/dok" "@DOK_DIR@")
  (sub-spe-konv "00index" "@F00INDEX@")
  (sub-spe-konv "<KBD>" "")
  (sub-spe-konv "</KBD>" "")
  (sub-spe-konv "<SAMP>" "")
  (sub-spe-konv "</SAMP>" "")
  (sub-spe-konv "NNOSHADE" "NOSHADE")
  (sub-spe-konv "1l" "@LOC_MAN@")
  (sub-spe-konv ".dok" "@SUFF_DOC@")
  (sub-spe-konv "<BR><CENTER><B></B></CENTER>" "")
  (when (y-or-n-p "Konv. norske bokst?" )
    (sub-spe-konv "\{" "@N_AE_L@")
    (sub-spe-konv "\[" "@N_AE_S@")
    (sub-spe-konv "\|" "@N_OE_L@")
    (sub-spe-konv "\\" "@N_OE_S@")
    (sub-spe-konv "\}" "@N_AA_L@")
    (sub-spe-konv "\]" "@N_AA_S@")
    (sub-spe-konv "æ" "@N_AE_L@")
    (sub-spe-konv "Æ" "@N_AE_S@")
    (sub-spe-konv "ø" "@N_OE_L@")
    (sub-spe-konv "Ø" "@N_OE_S@")
    (sub-spe-konv "å" "@N_AA_L@")
    (sub-spe-konv "Å" "@N_AA_S@")))

(defun lre-spe-konv-2 ()
  "Interaktiv bytting i *.VA-filer."
  (interactive "*")
  (if (and (string-match "dok" (buffer-name))
	   (y-or-n-p "Fixdok? "))
      (lre-fixup-spe-dok))
  (sub-spe-konv (read-from-minibuffer "Scriptnavn: "
				      (downcase (lre-buffer-name)))
		"&I;")
  (sub-spe-konv (concat "$" "Id" "$") "&Id;")
  (sub-spe-konv "/tmp" "&Tmpdir;")
  (sub-spe-konv "/dev/null" "&DevNull;")
  (sub-spe-konv "/dev/tty" "&DevTty;")
  (sub-spe-konv "$USER" "$&User;")
  (sub-spe-konv "&Spehome;" "&SHome;")
  (sub-spe-konv "SPE_HOME" "&SHome;")
  (sub-spe-konv "SPEsect" "&ManSect;")
  (sub-spe-konv "1l" "&ManSect;")
  (sub-spe-konv "[ng]?awk" "&Awk;")
  (sub-spe-konv "FEDEFS" "&lcdcDef;")
  (sub-spe-konv "spegloss.htm" "&GlossFile;")
  (sub-spe-konv "PROJ_HOME" "&PHome;")
  (sub-spe-konv "MAKE_HOME" "&MHome;")
  (sub-spe-konv "$SPEMORE" "More")
  (sub-spe-konv "SPE" "&System;")
;;  (sub-spe-konv "spe" "@SNAME_PFX@")
;;  (sub-spe-konv "spe" "@SNAME@")
  (sub-spe-konv "$&Shome;/dok" "&DocDir;")
  (sub-spe-konv "[.]dok" "&DocSuff;")
  (sub-spe-konv "00index" "&Index00;")
;;  (sub-spe-konv "<KBD>" "")
;;  (sub-spe-konv "</KBD>" "")
;;  (sub-spe-konv "<SAMP>" "")
;;  (sub-spe-konv "</SAMP>" "")
  (sub-spe-konv "NNOSHADE" "NOSHADE")
  (sub-spe-konv "<BR><CENTER><B></B></CENTER>" "")
  (when (and nil (y-or-n-p "Konv. norske bokst?" ))
    (sub-spe-konv "\{" "@N_AE_L@")
    (sub-spe-konv "\[" "@N_AE_S@")
    (sub-spe-konv "\|" "@N_OE_L@")
    (sub-spe-konv "\\" "@N_OE_S@")
    (sub-spe-konv "\}" "@N_AA_L@")
    (sub-spe-konv "\]" "@N_AA_S@")
    (sub-spe-konv "æ" "@N_AE_L@")
    (sub-spe-konv "Æ" "@N_AE_S@")
    (sub-spe-konv "ø" "@N_OE_L@")
    (sub-spe-konv "Ø" "@N_OE_S@")
    (sub-spe-konv "å" "@N_AA_L@")
    (sub-spe-konv "Å" "@N_AA_S@")))


(provide 'va-mode)
