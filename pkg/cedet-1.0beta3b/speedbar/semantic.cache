;; Object speedbar/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "speedbar/"
  :tables (list 
   (semanticdb-table "speedbar.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("speedbar-version" variable (:default-value "0.15beta2") nil [283 357]) ("speedbar-incompatible-version" variable (:default-value "0.14beta4") nil [358 596]) ("assoc" include nil nil [2482 2498]) ("easymenu" include nil nil [2499 2518]) ("dframe" include nil nil [2519 2536]) ("sb-image" include nil nil [2537 2556]) ("defgroup" code nil nil [2581 2712]) ("defgroup" code nil nil [2714 2828]) ("defgroup" code nil nil [2830 2938]) ("speedbar-require-version" function (:arguments ("major" "minor" "&optional" "beta")) nil [2950 3941]) ("speedbar-initial-expansion-mode-alist" variable (:default-value (quote (("buffers" speedbar-buffer-easymenu-definition speedbar-buffers-key-map speedbar-buffer-buttons) ("quick buffers" speedbar-buffer-easymenu-definition speedbar-buffers-key-map speedbar-buffer-buttons-temp) ("files" speedbar-easymenu-definition-special speedbar-file-key-map speedbar-directory-buttons speedbar-default-directory-list)))) nil [3943 5186]) ("speedbar-initial-expansion-list-name" variable (:default-value "files") nil [5188 5434]) ("speedbar-previously-used-expansion-list-name" variable (:default-value "files") nil [5436 5656]) ("speedbar-stealthy-function-list" variable (:default-value (quote (("files" speedbar-update-current-file speedbar-check-read-only speedbar-check-vc speedbar-check-objects)))) nil [5658 6414]) ("speedbar-mode-functions-list" variable (:default-value (quote (("files" (speedbar-item-info . speedbar-files-item-info) (speedbar-line-directory . speedbar-files-line-directory)) ("buffers" (speedbar-item-info . speedbar-buffers-item-info) (speedbar-line-directory . speedbar-buffers-line-directory)) ("quick buffers" (speedbar-item-info . speedbar-buffers-item-info) (speedbar-line-directory . speedbar-buffers-line-directory))))) nil [6416 7504]) ("speedbar-mode-specific-contents-flag" variable (:user-visible-flag t :default-value t) nil [7506 7731]) ("speedbar-query-confirmation-method" variable (:user-visible-flag t :default-value (quote all)) nil [7733 8258]) ("speedbar-special-mode-expansion-list" variable nil nil [8260 8596]) ("speedbar-special-mode-key-map" variable nil nil [8598 8823]) ("speedbar-before-visiting-file-hook" variable (:user-visible-flag t :default-value (quote (push-mark))) nil [8825 9064]) ("speedbar-visiting-file-hook" variable (:user-visible-flag t) nil [9066 9208]) ("speedbar-before-visiting-tag-hook" variable (:user-visible-flag t :default-value (quote (push-mark))) nil [9210 9447]) ("speedbar-visiting-tag-hook" variable (:user-visible-flag t :default-value (quote (speedbar-highlight-one-tag-line))) nil [9449 9728]) ("speedbar-load-hook" variable (:user-visible-flag t) nil [9730 9837]) ("speedbar-reconfigure-keymaps-hook" variable (:user-visible-flag t) nil [9839 9970]) ("speedbar-show-unknown-files" variable (:user-visible-flag t) nil [9972 10165]) ("speedbar-update-speed" variable (:user-visible-flag t :default-value dframe-update-speed) nil [10406 10509]) ("speedbar-navigating-speed" variable (:user-visible-flag t :default-value dframe-update-speed) nil [10511 10618]) ("speedbar-frame-parameters" variable (:user-visible-flag t :default-value (quote ((minibuffer) (width . 20) (border-width . 0) (menu-bar-lines . 0) (tool-bar-lines . 0) (unsplittable . t) (left-fringe . 0)))) nil [10641 11221]) ("speedbar-frame-plist" variable (:user-visible-flag t :default-value (quote (minibuffer nil width 20 border-width 0 internal-border-width 0 unsplittable t default-toolbar-visible-p nil has-modeline-p nil menubar-visible-p nil default-gutter-visible-p nil))) nil [11274 11855]) ("speedbar-use-imenu-flag" variable (:user-visible-flag t :default-value (stringp (locate-library "imenu"))) nil [11857 12198]) ("speedbar-dynamic-tags-function-list" variable (:default-value (quote ((speedbar-fetch-dynamic-imenu . speedbar-insert-imenu-list) (speedbar-fetch-dynamic-etags . speedbar-insert-etags-list)))) nil [12200 12893]) ("speedbar-use-tool-tips-flag" variable (:user-visible-flag t :default-value (and (not (featurep (quote xemacs))) (>= emacs-major-version 21))) nil [12895 13187]) ("speedbar-track-mouse-flag" variable (:user-visible-flag t :default-value (not speedbar-use-tool-tips-flag)) nil [13189 13363]) ("speedbar-sort-tags" variable (:user-visible-flag t) nil [13365 13545]) ("speedbar-tag-hierarchy-method" variable (:user-visible-flag t :default-value (quote (speedbar-prefix-group-tag-hierarchy speedbar-trim-words-tag-hierarchy))) nil [13547 14346]) ("speedbar-tag-group-name-minimum-length" variable (:user-visible-flag t :default-value 4) nil [14348 14786]) ("speedbar-tag-split-minimum-length" variable (:user-visible-flag t :default-value 20) nil [14788 15024]) ("speedbar-tag-regroup-maximum-length" variable (:user-visible-flag t :default-value 10) nil [15026 15320]) ("speedbar-directory-button-trim-method" variable (:user-visible-flag t :default-value (quote span)) nil [15322 15814]) ("speedbar-smart-directory-expand-flag" variable (:user-visible-flag t :default-value t) nil [15816 16275]) ("speedbar-indentation-width" variable (:user-visible-flag t :default-value 1) nil [16277 16430]) ("speedbar-hide-button-brackets-flag" variable (:user-visible-flag t) nil [16432 16588]) ("speedbar-before-popup-hook" variable (:user-visible-flag t) nil [16590 16721]) ("speedbar-after-create-hook" variable (:user-visible-flag t :default-value (quote (speedbar-frame-reposition-smartly))) nil [16723 16887]) ("speedbar-before-delete-hook" variable (:user-visible-flag t) nil [16889 17019]) ("speedbar-mode-hook" variable (:user-visible-flag t) nil [17021 17140]) ("speedbar-timer-hook" variable (:user-visible-flag t) nil [17142 17271]) ("speedbar-verbosity-level" variable (:user-visible-flag t :default-value 1) nil [17273 17485]) ("speedbar-indicator-separator" variable (:default-value " ") nil [17487 17587]) ("speedbar-vc-do-check" variable (:user-visible-flag t :default-value t) nil [17589 17802]) ("speedbar-vc-indicator" variable (:default-value "*") nil [17804 18039]) ("speedbar-vc-directory-enable-hook" variable (:user-visible-flag t) nil [18041 18297]) ("speedbar-vc-in-control-hook" variable (:user-visible-flag t) nil [18299 18577]) ("speedbar-vc-to-do-point" variable nil nil [18579 18690]) ("speedbar-obj-do-check" variable (:user-visible-flag t :default-value t) nil [18692 18954]) ("speedbar-obj-to-do-point" variable nil nil [18956 19068]) ("speedbar-obj-indicator" variable (:default-value (quote ("#" . "!"))) nil [19070 19325]) ("speedbar-obj-alist" variable (:default-value (quote (("\\.\\([cpC]\\|cpp\\|cc\\|cxx\\)$" . ".o") ("\\.el$" . ".elc") ("\\.java$" . ".class") ("\\.f\\(or\\|90\\|77\\)?$" . ".o") ("\\.tex$" . ".dvi") ("\\.texi$" . ".info")))) nil [19327 19619]) ("speedbar-ro-to-do-point" variable nil nil [19621 19726]) ("speedbar-object-read-only-indicator" variable (:default-value "%") nil [19728 19839]) ("speedbar-indicator-regex" variable (:default-value (concat (regexp-quote speedbar-indicator-separator) "\\(" (regexp-quote speedbar-vc-indicator) "\\|" (regexp-quote (car speedbar-obj-indicator)) "\\|" (regexp-quote (cdr speedbar-obj-indicator)) "\\|" (regexp-quote speedbar-object-read-only-indicator) "\\)*")) nil [19953 20382]) ("speedbar-scanner-reset-hook" variable (:user-visible-flag t) nil [20384 20595]) ("speedbar-ignored-modes" variable (:user-visible-flag t :default-value (quote (fundamental-mode))) nil [20597 20721]) ("speedbar-extension-list-to-regex" function (:arguments ("extlist")) nil [20723 21563]) ("speedbar-ignored-directory-regexp" variable nil nil [21565 21976]) ("speedbar-ignored-directory-expressions" variable (:user-visible-flag t :default-value (quote ("[/\\]logs?[/\\]\\'"))) nil [21978 22673]) ("speedbar-directory-unshown-regexp" variable (:user-visible-flag t :default-value "^\\(CVS\\|RCS\\|SCCS\\|\\..*\\)\\'") nil [22675 22959]) ("speedbar-file-unshown-regexp" variable (:user-visible-flag t :default-value (let ((nstr "") (noext completion-ignored-extensions)) (while noext (setq nstr (concat nstr (regexp-quote (car noext)) "\\'" (if (cdr noext) "\\|" "")) noext (cdr noext))) (concat nstr "\\|#[^#]+#$\\|\\.\\.?\\'\\|\\.#"))) nil [22961 23437]) ("speedbar-supported-extension-expressions" variable (:user-visible-flag t :default-value (append (quote (".[ch]\\(\\+\\+\\|pp\\|c\\|h\\|xx\\)?" ".tex\\(i\\(nfo\\)?\\)?" ".el" ".emacs" ".l" ".lsp" ".p" ".java" ".f\\(90\\|77\\|or\\)?")) (if speedbar-use-imenu-flag (quote (".ada" ".p[lm]" ".tcl" ".m" ".scm" ".pm" ".py" ".g" ".s?html" ".ma?k" "[Mm]akefile\\(\\.in\\)?"))))) nil [23534 24862]) ("speedbar-file-regexp" variable (:default-value (speedbar-extension-list-to-regex speedbar-supported-extension-expressions)) nil [24864 25141]) ("speedbar-add-supported-extension" function (:user-visible-flag t :arguments ("extension")) nil [25143 25956]) ("speedbar-add-ignored-directory-regexp" function (:user-visible-flag t :arguments ("directory-expression")) nil [25958 26818]) ("if" code nil nil [26877 27150]) ("speedbar-update-flag" variable (:user-visible-flag t :default-value dframe-have-timer-flag) nil [27152 27444]) ("speedbar-update-flag-disable" variable nil nil [27446 27540]) ("speedbar-syntax-table" variable nil nil [27542 27615]) ("if" code nil nil [27617 28170]) ("speedbar-key-map" variable nil nil [28172 28237]) ("if" code nil nil [28239 29518]) ("speedbar-make-specialized-keymap" function nil nil [29520 29805]) ("speedbar-file-key-map" variable nil nil [29807 29903]) ("if" code nil nil [29905 31180]) ("speedbar-easymenu-definition-base" variable (:default-value (append (quote ("Speedbar" ["Update" speedbar-refresh t] ["Auto Update" speedbar-toggle-updates :active (not speedbar-update-flag-disable) :style toggle :selected speedbar-update-flag])) (if (and (or (fboundp (quote defimage)) (fboundp (quote make-image-specifier))) (if (fboundp (quote display-graphic-p)) (display-graphic-p) window-system)) (list ["Use Images" speedbar-toggle-images :style toggle :selected speedbar-use-images])))) nil [31182 31726]) ("speedbar-easymenu-definition-special" variable (:default-value (quote (["Edit Item On Line" speedbar-edit-line t] ["Show All Files" speedbar-toggle-show-all-files :style toggle :selected speedbar-show-unknown-files] ["Expand File Tags" speedbar-expand-line (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.\\+. "))] ["Flush Cache & Expand" speedbar-flush-expand-line (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.\\+. "))] ["Expand All Descendants" speedbar-expand-line-descendants (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.\\+. "))] ["Contract File Tags" speedbar-contract-line (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.-. "))] "----" ["File/Tag Information" speedbar-item-info t] ["Load Lisp File" speedbar-item-load (save-excursion (beginning-of-line) (looking-at "[0-9]+: *\\[[+-]\\] .+\\(\\.el\\)\\( \\|$\\)"))] ["Byte Compile File" speedbar-item-byte-compile (save-excursion (beginning-of-line) (looking-at "[0-9]+: *\\[[+-]\\] .+\\(\\.el\\)\\( \\|$\\)"))] ["Copy File" speedbar-item-copy (save-excursion (beginning-of-line) (looking-at "[0-9]+: *\\["))] ["Rename File" speedbar-item-rename (save-excursion (beginning-of-line) (looking-at "[0-9]+: *[[<]"))] ["Create Directory" speedbar-create-directory (save-excursion (beginning-of-line) (looking-at "[0-9]+: *[[<]"))] ["Delete File" speedbar-item-delete (save-excursion (beginning-of-line) (looking-at "[0-9]+: *[[<]"))] ["Delete Object" speedbar-item-object-delete (save-excursion (beginning-of-line) (looking-at "[0-9]+: *\\[[+-]\\] [^ 
]+ \\*?[!#]$"))]))) nil [31728 33603]) ("speedbar-easymenu-definition-trailer" variable (:default-value (append (if (and (featurep (quote custom)) (fboundp (quote custom-declare-variable))) (list ["Customize..." speedbar-customize t])) (list ["Detach" speedbar-detach (and speedbar-frame (eq (selected-frame) speedbar-frame))] ["Close" dframe-close-frame t] ["Quit" delete-frame t]))) nil [33606 34012]) ("speedbar-desired-buffer" variable nil nil [34014 34166]) ("speedbar-buffer" variable nil nil [34167 34235]) ("speedbar-frame" variable nil nil [34236 34298]) ("speedbar-cached-frame" variable nil nil [34299 34401]) ("speedbar-full-text-cache" variable nil nil [34402 34518]) ("speedbar-last-selected-file" variable nil nil [34520 34617]) ("speedbar-shown-directories" variable nil nil [34619 34736]) ("speedbar-directory-contents-alist" variable nil nil [34738 34985]) ("speedbar-power-click" variable nil nil [34987 35090]) ("if" code nil nil [35115 35597]) ("defalias" code nil nil [35655 35696]) ("speedbar-frame-mode" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [35712 37332]) ("speedbar-frame-reposition-smartly" function nil nil [37334 38292]) ("speedbar-detach" function (:user-visible-flag t) nil [38294 38899]) ("speedbar-current-frame" function nil nil [38901 39060]) ("speedbar-handle-delete-frame" function (:arguments ("e")) nil [39062 39371]) ("speedbar-get-focus" function (:user-visible-flag t) nil [39388 39787]) ("speedbar-frame-width" function nil nil [39789 39960]) ("speedbar-mode" function nil nil [39962 42751]) ("speedbar-message" function (:arguments ("fmt" "&rest" "args")) nil [42753 42957]) ("speedbar-y-or-n-p" function (:arguments ("prompt" "&optional" "deleting")) nil [42959 43403]) ("speedbar-select-attached-frame" function nil nil [43405 43555]) ("defalias" code nil nil [43584 43654]) ("defalias" code nil nil [43655 43743]) ("speedbar-set-mode-line-format" function nil nil [43746 44935]) ("speedbar-previous-menu" variable nil nil [44937 45044]) ("speedbar-reconfigure-keymaps" function nil nil [45046 47252]) ("speedbar-customize" function (:user-visible-flag t) nil [47280 47551]) ("speedbar-track-mouse" function (:arguments ("event")) nil [47553 47972]) ("speedbar-show-info-under-mouse" function nil nil [47974 48333]) ("speedbar-next" function (:user-visible-flag t :arguments ("arg")) nil [48335 48524]) ("speedbar-prev" function (:user-visible-flag t :arguments ("arg")) nil [48526 48669]) ("speedbar-restricted-move" function (:arguments ("arg")) nil [48671 49815]) ("speedbar-restricted-next" function (:user-visible-flag t :arguments ("arg")) nil [49817 50116]) ("speedbar-restricted-prev" function (:user-visible-flag t :arguments ("arg")) nil [50118 50430]) ("speedbar-navigate-list" function (:user-visible-flag t :arguments ("arg")) nil [50432 50904]) ("speedbar-forward-list" function (:user-visible-flag t) nil [50906 51155]) ("speedbar-backward-list" function (:user-visible-flag t) nil [51157 51409]) ("speedbar-scroll-up" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [51411 51589]) ("speedbar-scroll-down" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [51591 51771]) ("speedbar-up-directory" function (:user-visible-flag t) nil [51773 52051]) ("speedbar-refresh" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [52109 52922]) ("speedbar-item-load" function (:user-visible-flag t) nil [52924 53367]) ("speedbar-item-byte-compile" function (:user-visible-flag t) nil [53369 53757]) ("speedbar-mouse-item-info" function (:user-visible-flag t :arguments ("event")) nil [53759 53963]) ("speedbar-generic-item-info" function nil nil [53965 54534]) ("speedbar-item-info" function (:user-visible-flag t) nil [54536 54876]) ("speedbar-item-info-file-helper" function (:arguments ("&optional" "filename")) nil [54878 55299]) ("speedbar-item-info-tag-helper" function nil nil [55301 57178]) ("speedbar-files-item-info" function nil nil [57180 57467]) ("speedbar-item-copy" function (:user-visible-flag t) nil [57469 58504]) ("speedbar-item-rename" function (:user-visible-flag t) nil [58506 59480]) ("speedbar-create-directory" function (:user-visible-flag t) nil [59482 59861]) ("speedbar-item-delete" function (:user-visible-flag t) nil [59863 60306]) ("speedbar-item-object-delete" function (:user-visible-flag t) nil [60308 60940]) ("speedbar-enable-update" function (:user-visible-flag t) nil [60942 61154]) ("speedbar-disable-update" function (:user-visible-flag t) nil [61156 61362]) ("speedbar-toggle-updates" function (:user-visible-flag t) nil [61364 61555]) ("speedbar-toggle-images" function (:user-visible-flag t) nil [61557 61779]) ("speedbar-toggle-sorting" function (:user-visible-flag t) nil [61781 61908]) ("speedbar-toggle-show-all-files" function (:user-visible-flag t) nil [61910 62109]) ("speedbar-with-writable" function (:arguments ("&rest" "forms")) nil [62111 62274]) ("put" code nil nil [62275 62328]) ("speedbar-insert-button" function (:arguments ("text" "face" "mouse" "function" "&optional" "token" "prevline")) nil [62330 63463]) ("speedbar-insert-separator" function (:arguments ("text")) nil [63465 63861]) ("speedbar-make-button" function (:arguments ("start" "end" "face" "mouse" "function" "&optional" "token")) nil [63863 64757]) ("speedbar-initial-expansion-list" function nil nil [64801 65135]) ("speedbar-initial-menu" function nil nil [65137 65441]) ("speedbar-initial-keymap" function nil nil [65443 65753]) ("speedbar-initial-stealthy-functions" function nil nil [65755 66047]) ("speedbar-add-expansion-list" function (:arguments ("new-list")) nil [66049 66208]) ("speedbar-change-initial-expansion-list" function (:user-visible-flag t :arguments ("new-default")) nil [66210 66875]) ("speedbar-fetch-replacement-function" function (:arguments ("function")) nil [66877 67201]) ("speedbar-add-mode-functions-list" function (:arguments ("new-list")) nil [67203 67405]) ("speedbar-maybe-add-localized-support" function (:arguments ("buffer")) nil [67452 67777]) ("speedbar-add-localized-speedbar-support" function (:user-visible-flag t :arguments ("buffer")) nil [67779 69313]) ("speedbar-remove-localized-speedbar-support" function (:arguments ("buffer")) nil [69315 69676]) ("speedbar-file-lists" function (:arguments ("directory")) nil [69709 70903]) ("speedbar-directory-buttons" function (:arguments ("directory" "index")) nil [70905 73298]) ("speedbar-make-tag-line" function (:arguments ("exp-button-type" "exp-button-char" "exp-button-function" "exp-button-data" "tag-button" "tag-button-function" "tag-button-data" "tag-button-face" "depth")) nil [73300 75912]) ("speedbar-change-expand-button-char" function (:arguments ("char")) nil [75916 76469]) ("speedbar-insert-files-at-point" function (:arguments ("files" "level")) nil [76499 77518]) ("speedbar-default-directory-list" function (:arguments ("directory" "index")) nil [77520 78436]) ("speedbar-generic-list-group-p" function (:arguments ("sublst")) nil [78831 79355]) ("speedbar-generic-list-positioned-group-p" function (:arguments ("sublst")) nil [79357 79809]) ("speedbar-generic-list-tag-p" function (:arguments ("sublst")) nil [79811 80117]) ("speedbar-sort-tag-hierarchy" function (:arguments ("lst")) nil [80119 80272]) ("speedbar-try-completion" function (:arguments ("string" "alist")) nil [80274 80570]) ("speedbar-prefix-group-tag-hierarchy" function (:arguments ("lst")) nil [80572 85593]) ("speedbar-trim-words-tag-hierarchy" function (:arguments ("lst")) nil [85595 86786]) ("speedbar-simple-group-tag-hierarchy" function (:arguments ("lst")) nil [86788 87293]) ("speedbar-create-tag-hierarchy" function (:arguments ("lst")) nil [87295 87920]) ("speedbar-generic-list-group-expand-button-type" variable (:default-value (quote curly)) nil [87922 88118]) ("speedbar-generic-list-tag-button-type" variable nil nil [88120 88307]) ("speedbar-insert-generic-list" function (:arguments ("level" "lst" "expand-fun" "find-fun")) nil [88309 90353]) ("speedbar-insert-imenu-list" function (:arguments ("indent" "lst")) nil [90355 90547]) ("speedbar-insert-etags-list" function (:arguments ("indent" "lst")) nil [90553 90745]) ("speedbar-update-contents" function (:user-visible-flag t) nil [90771 91450]) ("speedbar-update-localized-contents" function nil nil [91452 92840]) ("speedbar-update-directory-contents" function nil nil [92842 95745]) ("speedbar-update-special-contents" function nil nil [95747 96780]) ("speedbar-set-timer" function (:arguments ("timeout")) nil [96782 97385]) ("speedbar-timer-fn" function nil nil [97387 99436]) ("speedbar-stealthy-update-recurse" variable nil nil [99467 99566]) ("speedbar-stealthy-updates" function nil nil [99568 100079]) ("speedbar-reset-scanners" function nil nil [100081 100390]) ("speedbar-find-selected-file" function (:arguments ("file")) nil [100392 101080]) ("speedbar-clear-current-file" function nil nil [101082 101477]) ("speedbar-update-current-file" function nil nil [101479 103865]) ("speedbar-add-indicator" function (:arguments ("indicator-string" "&optional" "replace-this")) nil [103867 105016]) ("speedbar-check-read-only" function nil nil [105018 106126]) ("or" code nil nil [106281 106380]) ("speedbar-check-vc" function nil nil [106383 108070]) ("speedbar-check-vc-this-line" function (:arguments ("depth")) nil [108072 108750]) ("speedbar-vc-check-dir-p" function (:arguments ("directory")) nil [108752 109421]) ("speedbar-this-file-in-vc" function (:arguments ("directory" "name")) nil [109423 110483]) ("speedbar-check-objects" function nil nil [110508 111704]) ("speedbar-check-obj-this-line" function (:arguments ("depth")) nil [111706 112985]) ("speedbar-position-cursor-on-line" function nil nil [113013 113242]) ("speedbar-click" function (:arguments ("e")) nil [113244 113660]) ("speedbar-do-function-pointer" function nil nil [113662 114734]) ("speedbar-line-text" function (:arguments ("&optional" "p")) nil [114782 115165]) ("speedbar-line-token" function (:arguments ("&optional" "p")) nil [115167 115645]) ("speedbar-line-file" function (:arguments ("&optional" "p")) nil [115647 116150]) ("speedbar-goto-this-file" function (:arguments ("file")) nil [116152 117397]) ("speedbar-line-directory" function (:arguments ("&optional" "depth")) nil [117399 117874]) ("speedbar-files-line-directory" function (:arguments ("&optional" "depth")) nil [117882 118998]) ("speedbar-directory-line" function (:arguments ("directory")) nil [119000 119894]) ("speedbar-edit-line" function (:user-visible-flag t) nil [119896 120358]) ("speedbar-expand-line" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [120360 120820]) ("speedbar-flush-expand-line" function (:user-visible-flag t) nil [120824 120975]) ("speedbar-contract-line" function (:user-visible-flag t) nil [120979 121304]) ("speedbar-toggle-line-expansion" function (:user-visible-flag t) nil [121306 121652]) ("speedbar-expand-line-descendants" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [121654 122231]) ("speedbar-contract-line-descendants" function (:user-visible-flag t) nil [122233 122493]) ("speedbar-find-file" function (:arguments ("text" "token" "indent")) nil [122495 123355]) ("speedbar-dir-follow" function (:arguments ("text" "token" "indent")) nil [123357 124121]) ("speedbar-delete-subblock" function (:arguments ("indent")) nil [124123 124566]) ("speedbar-dired" function (:arguments ("text" "token" "indent")) nil [124568 126011]) ("speedbar-directory-buttons-follow" function (:arguments ("text" "token" "indent")) nil [126013 126601]) ("speedbar-tag-file" function (:arguments ("text" "token" "indent")) nil [126603 127595]) ("speedbar-tag-find" function (:arguments ("text" "token" "indent")) nil [127597 128353]) ("speedbar-tag-expand" function (:arguments ("text" "token" "indent")) nil [128355 129128]) ("speedbar-select-frame-method" variable (:user-visible-flag t :default-value 1) nil [129177 129515]) ("speedbar-find-file-in-frame" function (:arguments ("file")) nil [129517 130139]) ("speedbar-center-buffer-smartly" function nil nil [130166 132341]) ("speedbar-fetch-dynamic-tags" function (:arguments ("file")) nil [132388 133487]) ("if" code nil nil [133520 134142]) ("speedbar-fetch-etags-parse-list" variable (:default-value (quote (("\\.\\([cChH]\\|c\\+\\+\\|cpp\\|cc\\|hh\\|java\\|cxx\\|hxx\\)\\'" . speedbar-parse-c-or-c++tag) ("^\\.emacs$\\|.\\(el\\|l\\|lsp\\)\\'" . "def[^i]+\\s-+\\(\\(\\w\\|[-_]\\)+\\)\\s-*") ("\\.tex\\'" . speedbar-parse-tex-string) ("\\.p\\'" . "\\(\\(FUNCTION\\|function\\|PROCEDURE\\|procedure\\)\\s-+\\([a-zA-Z0-9_.:]+\\)\\)\\s-*(?^?")))) nil [134209 135227]) ("speedbar-fetch-etags-command" variable (:user-visible-flag t :default-value "etags") nil [135229 135378]) ("speedbar-fetch-etags-arguments" variable (:user-visible-flag t :default-value (quote ("-D" "-I" "-o" "-"))) nil [135380 135669]) ("speedbar-toggle-etags" function (:user-visible-flag t :arguments ("flag")) nil [135671 136560]) ("speedbar-fetch-dynamic-etags" function (:arguments ("file")) nil [136562 138015]) ("speedbar-extract-one-symbol" function (:arguments ("expr")) nil [138672 139461]) ("speedbar-parse-c-or-c++tag" function nil nil [139463 140105]) ("speedbar-parse-tex-string" function nil nil [140107 140479]) ("speedbar-buffers-key-map" variable nil nil [140511 140598]) ("if" code nil nil [140600 141325]) ("speedbar-buffer-easymenu-definition" variable (:default-value (quote (["Jump to buffer" speedbar-edit-line t] ["Expand File Tags" speedbar-expand-line (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.\\+. "))] ["Flush Cache & Expand" speedbar-flush-expand-line (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.\\+. "))] ["Contract File Tags" speedbar-contract-line (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.-. "))] ["Kill Buffer" speedbar-buffer-kill-buffer (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.[-+?]. "))] ["Revert Buffer" speedbar-buffer-revert-buffer (save-excursion (beginning-of-line) (looking-at "[0-9]+: *.[-+?]. "))]))) nil [141327 142135]) ("speedbar-buffer-buttons" function (:arguments ("directory" "zero")) nil [142137 142365]) ("speedbar-buffer-buttons-temp" function (:arguments ("directory" "zero")) nil [142367 142598]) ("speedbar-buffer-buttons-engine" function (:arguments ("temp")) nil [142600 144327]) ("speedbar-buffers-tail-notes" function (:arguments ("buffer")) nil [144329 144650]) ("speedbar-buffers-item-info" function nil nil [144652 145192]) ("speedbar-buffers-line-directory" function (:arguments ("&optional" "depth")) nil [145194 145844]) ("speedbar-buffer-click" function (:arguments ("text" "token" "indent")) nil [145846 146292]) ("speedbar-buffer-kill-buffer" function (:user-visible-flag t) nil [146294 146608]) ("speedbar-buffer-revert-buffer" function (:user-visible-flag t) nil [146610 147182]) ("speedbar-highlight-one-tag-line" variable nil nil [147222 147338]) ("speedbar-highlight-one-tag-line" function nil nil [147340 147857]) ("speedbar-unhighlight-one-tag-line" function nil nil [147859 148176]) ("speedbar-recenter-to-top" function nil nil [148178 148298]) ("speedbar-recenter" function nil nil [148300 148454]) ("speedbar-button-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "green4")) (((class color) (background dark)) (:foreground "green3"))))) nil [148488 148710]) ("speedbar-file-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "cyan4")) (((class color) (background dark)) (:foreground "cyan")) (t (:bold t))))) nil [148712 148966]) ("speedbar-directory-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "blue4")) (((class color) (background dark)) (:foreground "light blue"))))) nil [148968 149209]) ("speedbar-tag-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "brown")) (((class color) (background dark)) (:foreground "yellow"))))) nil [149210 149444]) ("speedbar-selected-face" variable (:default-value (quote ((((class color) (background light)) (:foreground "red" :underline t)) (((class color) (background dark)) (:foreground "red" :underline t)) (t (:underline t))))) nil [149446 149749]) ("speedbar-highlight-face" variable (:default-value (quote ((((class color) (background light)) (:background "green")) (((class color) (background dark)) (:background "sea green")) (((class grayscale monochrome) (background light)) (:background "black")) (((class grayscale monochrome) (background dark)) (:background "white"))))) nil [149751 150206]) ("speedbar-separator-face" variable (:default-value (quote ((((class color) (background light)) (:background "blue" :foreground "white" :overline "gray")) (((class color) (background dark)) (:background "blue" :foreground "white" :overline "gray")) (((class grayscale monochrome) (background light)) (:background "black" :foreground "white" :overline "white")) (((class grayscale monochrome) (background dark)) (:background "white" :foreground "black" :overline "black"))))) nil [150208 150872]) ("add-hook" code nil nil [150895 150994]) ("if" code nil nil [151050 151197]) ("speedbar" package nil nil [151199 151218]) ("run-hooks" code nil nil [151266 151297]))
    :file "speedbar.el"
    :pointmax 151298
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
