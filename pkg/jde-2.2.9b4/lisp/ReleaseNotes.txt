JDE 2.2.9beta4

***************************************************************
*                         PLEASE READ                         *
***************************************************************
*                                                             *
* This release requires semantic 1.4beta10 (or later),        *
* speedbar 0.13 (or later), and eieio-0.16 (or later,         *
* except eieio-0.17beta1). You can obtain all three           *
* packages at http://cedet.sourceforge.net                    *
*                                                             *
* This release requires version 1.2.2 (or later) of the       *
* JDK.                                                        *
*                                                             *
* Note: This release does not work with eieio-0.17beta1, but  *
* it does work with eieio-0.17beta2.                          *
*                                                             *
* This release also requires avltree.el, which is part of the *
* elib 1.0 package. You can obtain elib at the JDE web site   *
* in compressed tar (http://sunsite.dk/jde/elib.tar.gz)       *
* or zip (http://sunsite.dk/jde/elib.zip) format.             *
*                                                             *
* JDEbug runs on Windows 2000 only if Service Pack 2 (or      *
* later) is installed.                                        *
*                                                             *
* If syntax-coloring does not work, download and install      *
* overlay-fix.el from the semantic web site.                  *
*                                                             *
***************************************************************

* Compile command fix: Removed space in front of 
  -g option that made it unrecognizable to compiler.

  Thanks to bert van vreckem.

* Cygwin/XEmacs compatibility fix: Now uses 
  mswindows-cygwin-to-win32-path function if defined.

  Thanks to Andy Piper.

* XEmacs compatibility fix: Beanshell buffer now correctly 
  converts new lines (eliminates ^M) on Windows.

  Thanks to Andy Piper.

* Adds the customization variable jde-import-auto-sort-function.
  This variable allows you to specify the function used by
  the JDE to sort imports.

  Thanks to Hugh Emberson.

* Bug fix: compile command once again supports the 
  jde-read-compile-args option.

  Thanks to Luis Novais for reporting this bug.

* Fixed bug in jde-java-version command.

  Thanks to Jim Davidson.

* Fixed Lisp error that occurred when the default setting
  for jde-compile-option-debug is in effect.

* XEmacs compatibility fix. Fixed undefined variable and
  function Lisp errors that occur when trying to compile
  a Java source file.

* XEmacs compatibility fix. Fixed bug that produced a Beanshell
  error when trying to run the compile server in XEmacs.

* XEmacs compatibility fix. Fixed bug that caused the JDE
  to append "(jde-save-variable " to every line of a prj.el
  file. This bug was due to a conditional expression that
  depended on the file sep char being a forward slash when
  by default it is a backslash on the native Windows version 
  of XEmacs.

* XEmacs cygwin compatibility fix. Fixed bug in the
  code that builds classpaths that garbled the resulting
  classpath.

* Fixed all warning produced by compiling jde.el
  in both Emacs and XEmacs.

  Thanks to Jeff Grief and Mike Wooley for showing me
  how to do this.

* Fixes make's error.

* Adds support for jdk1.4.

* Fixes logic error when using jde-gen-k&r, it was backwards in
  the following methods: jde-wiz-generate-interface, 
  jde-wiz-override-method-internal, jde-wiz-delegate, 
  jde-wiz-generate-abstract-class, jde-wiz-generate-interface,
  and jde-wiz-generate-abstract-class.

* Fixes bug the caused the jde-ant-build and jde-ant-projecthel 
  commands to fail when there is not a project file defined.



JDE 2.2.9beta3

* Now uses the version of javac shipped with the JDK 
  specified by jde-jdk.

* Now generates the correct command-line arguments for the 
  various versions of javac.

* Now includes the +E option if jikes is the selected compiler.

* Fixes bug in jde-get-jdk-dir that caused it to return
  an incorrect path when looking for the directory on 
  the PATH environment variable.

* Fixed compile error that occurs when jde-compile-option-debug is set.
  This was due to the -g option being wrapped in an extra list.
  Thanks to David Ponce.

* Now includes rt.jar in the classpath when jikes is the compiler.
  Thanks to David Ponce.

* Fixed bug in jde-help-browse-jdk-doc, which was calling
  jde-normalize-path with no arguments, when jde-jdk-doc-url did not
  start with http://, file://, or is equal to "". Thanks to Javier
  Lopez.

* Fixed bugs in jde-java-version command.

* Fixed bug that caused the in-buffer verion of completion to throw
  an error for the first completion. 

  Thanks to Jason Rumney.



JDE 2.2.9beta2

* The jde-build-ant-command now quotes all path arguments to 
  accommodate Windows. This change was submitted by 
  "Kevin Jones" <kevinj@develop.com>. I don't use Ant so I've
   not tested this change.

* Replaced the customization variable jde-db-debugger with
  jde-debugger to be consistent with jde-compiler.


JDE 2.2.9beta1

* The completion methods now takes into account default accesss
  level. Completion now includes protected and package
  methods from super classes.
  
* The JDE's Java code has been enhanced to speed lookup of 
  qualified class names and project switching. These
  changes require version 1.2.2 or later of the JDK. Thanks
  to Eric Friedman.

* Automatic parsing of Java buffers now reparses only that portion
  of a buffer that has changed whenever possible. This should
  speed up reparsing of buffers after most changes. Note that
  this change requires semantic 1.4beta10 (or later). Thanks to
  David Ponce.

* This release uses a new algorithm for determining when to reparse a
  buffer. When the buffer is modified `jde-parse-buffer-changed-hook'
  check the auto-parse timer to see if the auto-parse task is about to
  be triggered (< 2 secs). If so it delay the triggering of
  auto-parse (+ 10 secs) to let you finish typing before doing a
  re-parse. And so on. Thanks to David Ponce.

* This release fixes the `font-lock-add-keywords' problem reported 
  by Klaus Berndl <klaus.berndl@sdm.de>. Thanks to David Ponce.

* Completion methods now places the cursor in between parenthesis
  when the method contains parameters.

* JDEBug does not split the frame in 3 windows anymore.

* JDEBug does not retrieve the local variables and the stack
  information by default.

* Adds the commands jde-bug-toggle-local-variables and
  jde-bug-toggle-stack-info. The first command enables retrieving the local
  variables while stepping using JDEbug, and the latter enables retrieving
  stack information.

* This release adds a set of customization variables intended
  to facilitate switching from one version of the JDK to
  another.

  - jde-jdk-registry
    
    Specifies the versions and locations of the JDKs installed on your
    system. This variable determines the set of legal values for the
    jde-jdk variable (see next release note).


  - jde-jdk 

    Specifies the location and version of the JDK currently 
    being used by the JDE.

    The customization buffer for this variable displays
    a set of radio buttons that reflect all the registered
    JDKs on your system. You can thus switch from one registered
    JDK to another simply by selecting the button of the desired
    JDK.

  - jde-java-environment-variables

    Specifies the environment variables that specify the default
    location of the current JDK. The default names of the variables
    are JAVA_HOME and JAVA_VERSION.

* Adds the command jde-get-jdk-dir. This command returns
  the root directory of the JDK currently targeted by the JDE.
  The target JDK is the JDK specified by jde-jdk variable,
  of if this variable is null, by the jde-java-environment variables,
  or if these are not defined, by the PATH 
  environment variable.

* Adds a new command, jde-java-version, that returns the
  version of Java being used by the JDE. This command returns the
  version specified by the jde-jdk variable, or if this is not
  defined by the JAVA_VERSION environment variable, or if neither
  of these are defined by  the "java.version" property of the 
  vm used to run the BeanShell.  Note that in the latter case,
  executing this command causes the BeanShell to be
  launched if it is not already running.

  Future versions of the JDE will use  this command to adapt
  to differences among JDK versions, for example, to set 
  JDK-version-specific command line options required to 
  launch a process in debug attach mode.

* Completion methods now shows the exceptions that the method
  could throw.
  
  Thanks to Petter Måhlén [petter.mahlen@chello.se]

* Adds a Beanshell-based "compile server" for compiling
  Java programs. The compile server uses the same Java compiler
  as javac but it uses the Beanshell to invoke the compiler
  instead of starting a new vm just to do the compilation. This
  avoids the vm startup time that accounts for most of the time
  spent by javac on compiling a class. The result is lightening
  fast compilation of your classes. To use the compile server
  instead of javac to compile your classes, set jde-jdk-directory
  to the root of the JDK that you are using to develop your project
  and set the variable jde-compile-server on.

  Thanks to Javier Lopez.

* The JDE->Help->JDK command command now looks for the JDK doc
  at jde-jdk-directory/docs/index.html if it cannot find the
  doc at jde-jdk-doc-url. The command now also checks for the
  existence of the doc locally or on the web and errors out if it
  cannot find it.

* Added customization variable jde-complete-signature-display-time,
  allows users to choose for how long to display the signature of the last
  completion.

* Adds customization variable jde-complete-signature-display, allows
  to choose what display to use to show the signature of the last completion.

* Adds jde-complete-display-current-signature command.

  This command displays the signature of the last completion. 
  
* Fixed compile buffer fontification problem caused by 
  copying global post-command-hook into local post-command-hook
  in jde-mode-internal.

  Thanks to David Ponce.

* Adds jde-stat-loc-report-directory and jde-stat-loc-report-project.
  
  These commands generate a report showing the number of code, comment,
  javadoc, and blank lines in all the java files in the current
  directory and subdirectories respectively. Note: These methods will
  kill any buffer containing a java file contained in the current
  directory or subdirectories. 
  
* Redefined jde-db-debugger to permit selection of three
  debuggers: JDEbug, new jdb, and old jdb.

  Note: you need to update all project files that use this variable.

* Redefined jde-compiler to allow selection of the
  following options: javac executable, javac server,
  and jikes executable.

  This paves the way for providing explicit support for jikes and
  various versions of javac.

  Note: you must update any project files that customize this variable.



JDE 2.2.8

New Features
============

* The JDE's code generation wizards now observe the
  jde-gen-k&r indentation style preference.

* Adds JDE->Wizards->Generate Get/Set Methods 
  (M-x jde-wiz-get-set-methods) command. 

  This command generates get and set methods for all private fields 
  in the outer class and inner classes in the current buffer.

  Thanks to Javier Lopez and Sandip Chitale.

* Adds jde-import-collapse-imports command.

  Thanks to Max Rydahl Andersen.

* Adds JDE->Wizards->Extend Abstract Class (jde-wiz-extend-abstract-class)
  command.

  Thanks to Javier Lopez.

* New font-lock setup policy.

  - If `jde-use-font-lock' is non-nil the JDE completely handles font
    lock setup. It turns on font locking in `java-mode' if needed and
    installs the extra level of fontification in
    `java-font-lock-keywords-4'.

  - If `jde-use-font-lock' is nil the JDE  delegates
    syntax coloring setup to standard `java-mode'.

* Adds the JDE->Help->Class Member... (jde-help-class-member) command.

  This command displays help for a specified field or method of a class.

  Specifically, the command pops up a menu of the members of a specified class.
  It then searches jde-help-docsets for javadoc for the class. If found,
  it points the browser to the point in the javadoc file where doc for
  the selected class member should be located. Note that this command
  does not attempt to verify whether doc for the member actually exists
  in the file.

* Completion enhancements:

  - Supports completion of all constructors. 

  - Adds a customization variable, jde-complete-add-space-after-method,
    to allow you to choose among these  types of completions:
    v.get() and v.get ()

  - Adds a customization variable, jde-complete-unique-method-names, to allow
    the removal of methods with the same name from the completion list.

  - Adds a customization variable, jde-complete-insert-method-signature, to
    allow you to choose between the completions:
    v.get(int, int) or v.get()

  - After completions method signatures and returns types are shown in
    the minibuffer for 60 seconds or until the next completion,
    whichever occurs first.

  - Modifies jde-complete-at-point and jde-complete-at-point-menu to
    insert the methods the same way.

  - Dynamically loads classes, eliminating the need to update the class
    list after recompiles.

  - Minor changes to improve performance:

    - The classinfo is sorted and processed before being added to the cache.

    - Reduced the number of loops to process the completions list before being
      added to the cache.

    - Modifieds jde-complete-find-all-completion to take advantage of the fact 
      that the completion list is in alphabetical order.

    - The method find-completion-for-pair does not call jde-complete-find-all-
      completions if the user did not enter part of the completion.

  - Completion for <this> now includes private and protected 
    methods in the completion list. 

  Thanks to "Javier Lopez" <jlopez@cellexchange.com>.

* More completion enhancements:

  -- Completion list now includes private methods of the current class 
     and protected methods of the super class.

  -- Now sorts the possible completions in alphabetical order.

  -- Handles completion on instances returned by constructors, e.g.,
     new Vector(). and of arguments passed to constructors, e.g.,
     v.add(get.
               ^
  -- Fixes bug that prevented completion of  super class methods, i.e. super.ge...

     Thanks to Javier Lopez <jlopez@cellexchange.com>

  -- Completion now works for instances of inner classes in many cases. 
     The inner class must be declared before it is referenced for completion to work.
     Future releases will fix this and other deficiencies in inner class handling. 

     Thanks to "Evan Easton" <evan@eeaston.com>.

* Defines the new function jde-ant-projecthelp, which invokes 
  Ant with the "-projecthelp" switch to list all available targets
  for the current buildfile. 

  Thanks to Jason Stell"  jason.stell@globalone.net.

* Adds the customization variable, jde-build-function, which 
  allows selection of one a standard set of 
  functions (jde-java-build, jde-ant-build or jde-make) or 
  specification of a custom function.

  Removes the customization variable, jde-build-use-make.

  Thanks to Jason Stell jason.stell@globalone.net.

* Adds jde-gen-define-abbrev-template function.

  This function allows you to define abbreviations whose
  expansions are tempo templates. You can use this function,
  for example, to define your own control flow abbreviations.
  See the control flow section of the JDE User's Guide for
  information on how to use this function.

* Adds the customization variable, jde-launch-beanshell-on-demand.

  If this variable is non-nil (the default), the JDE launches
  the Beanshell only when it is needed. Otherwise, it launches
  the Beanshell whenever you open a Java source file and the
  Beanshell is not already running.

* Adds jde-enable-senator variable.

  If non-nil (the default), this variable causes the JDE to
  enable senator-minor-mode  in Java buffers.
  senator-minor-mode provides syntax-based searching and
  buffer navigation commands.

* User can now force the JDE to use either wget or url-file-exists 
  to verify existence of a remote file.

  Thanks to Luis Miguel Hernanz Iglesias 
  <luish@germinus.com> for suggesting this enhancement.

* Added jde-ant.el to distribution.

* Changes name of jde-show-class-source to jde-open-class-source
  and created jde-show-class-source as an alias.

* Adds jde-open-base-class-source command.

  This command was borrowed from the java-open library.

* Added else-if control flow template. 

  Thanks to "Javier Lopez" <jlopez@cellexchange.com>

* Adds a control flow template for a for iterator loop. 

  Thanks to Robert Mecklenburg <mecklen@cimsoft.com>.

* Now replaces the colon in the DOS drive prefix with a vertical bar 
  when forming URL's. This is done to accommodate Netscape.

* Enhanced jde-help-symbol so that it prompts you to enter the symbol. 
  Also, if more than once class of the same name exists, 
  prompts you to select the appropriate class.


Bug Fixes
=========

* XEmacs compatibility fix. Now accommodates the way XEmacs 
  specifies the temp directory. 

  Thanks to Dr. Volker Zell.

* Fixes bug that cause completion to return the wrong name when the class does not have
  a package, e.g., .Test for Test.java. 

  Thanks to Javier Lopez.

* Fixes JDE->Help->JDE User Guide JDEbug->Help commands so that 
  they work on XEmacs.

  Thanks to Dr. Volker Zell.

* Fixes jde-ant-build so that it does not invoke last-nonmenu-event 
  on XEmacs.

* Fixes bug that prevented completion of variables referenced
  in inner classes.

  Thanks to Javier Lopez.

* Fixed the JDE's project file loader to avoid an infinite recursion
  on Windows when the project file is on a virtual drive created with
  the DOS subst command.

  Thanks to Nat Goodspeed.

* Fixes javadoc checker error that occurs when the checker tries to match 
  an array name in javadoc comments and in argument lists.

  Thanks to David Ponce.

* XEmacs compatibility fix for error that occurs when the JDE attempts
  to clear the completion cache after compiling a file.

  Thanks to Javier Lopez.

* NT/XEmacs compatibility fix: jde-find-project-file now returns 
  paths with forward slashes as directory sep characters on NT/XEmacs.

* Fixed jde-wiz-update-classes so that it updates the classes list 
  to the CLASSPATH environment variable if jde-global-classpath 
  is not defined.

* Defines jde-ant-interactive-target-arg-history and 
  jde-ant-interactive-target-arg-history.

  Thanks to Dirk Husemann <hud@zurich.ibm.com>.

* The JDEbug Run menu item becomes Continue when the debugger
  halts at a breakpoint.

  Thanks to Alan Hadsell <ahadsell@MtDiablo.com> 

* Added compatibility fixes for NT/XEmacs use of backslash as the
  default directory sep character.

  Thanks to William Griswold <wgg@cs.ucsd.edu>.

* Fixes bug in jde-save-needs-saving-p that caused the JDE not 
  to save variables whose customized value is nil.

* Fixes import insertion point bug.

  Thanks to "Javier Lopez" <jlopez@cellexchange.com>

* Fixed NT/XEmacs incompatibility in jde-package.el caused by XEmacs' 
  use of back slash as the directory path separator.

  Thanks to David Ponce.

* The interface wizard now includes a valid return statement in methods that return
  a value. 
 
  Thanks to "Craig McGeachie" <craig@rhe.com.au>.





