§rem <!-- -*-xml-*- -->
§default notttused (eval (progn (make-variable-buffer-local 'tplsub-enable-eval) (setq tplsub-enable-eval t) ""))
§define SCCStdId (eval (concat "@(" "#)SPE %" "M% " "%I" "% " "%E" "%>"))
§if useSCCSvers Use SCCS for version control (otherwise RCS)
§define SCCSverno (eval (concat "%" "I%"))
§default SCCSid (eval (concat "@(" "#)SPE %" "M% " "%I" "% " "%E" "%>"))
§ask SCCSid SCCS-ID
§define SCCSFileID (eval (concat "%M" "% " "%I" "%"))
§default SCCSFileDate (eval (concat "%" "E%"))
§ask SCCSFileDate Fildato
§if beta Beta-status
§define sstate exp
§else
§define sstate rel
§fi beta
§else SCCS
§define SCCSverno (eval (concat "$" "Revision$"))
§default SCCSid (eval (concat "$" "Id" "$"))
§ask SCCSid RCS-ID
§default SCCSFileDate (eval (concat "$" "Date$"))
§ask SCCSFileDate Fildato
§define sstate (eval (concat "$" "State$"))
§define SCCSFileID (eval (concat " $" "Revision$"))
§fi SCCS/RCS
§default ScriptName (eval (if buffer-file-name (file-name-nondirectory (file-name-sans-extension buffer-file-name)) ""))
§ask ScriptName Navn på scriptet
§ask Description Beskrivelse av scriptet
§default Date (eval (tplsub--conc-date "/" nil t))
§ask Date Dagens dato
§default ThisYear (eval tplsub--date-y)
§ask ThisYear Året i år
§def1 User (eval user-login-name)
§ask User Brukernavnet ditt
§define SPE SPE
§if Gjenbrukbart
§define general yes
§else
§define general no
§fi Gjenbrukbart
§rem ----------------------------------------------------------------
         <!-- FILE: §ScriptName§.xml ! -->
<?xml version="1.0" encoding="iso-8859-1"?>
   <!-- Default style sheet for viewing -->
   <?xml-stylesheet type="text/xsl" href="util-html.xsl"?>
   <!-- Template version: kshxml.vpl TVIST kshxml.vpl 38.1 07/06/08 SPE $Id$ -->
<!DOCTYPE utility SYSTEM "utility.dtd" [
    <!ENTITY I "§ScriptName§" >
    <!ENTITY System "§SPE§" >
    <!ENTITY Ver "§SCCSid§" >
]>
§rem ----------------------------------------------------------------
§define OptString :h
§define SyntaxHelp
§if hasSCCS Bruker SCCS
§if hasOptr Ta med opsjon -r (SCCS-versjon)
§append OptString r:
§fi
§if hasOptC Ta med opsjon -C (SCCS-konfig)
§append OptString C:
§fi
§if hasOptB Ta med opsjon -B (lokal SCCS)
§append OptString B:
§fi
§if hasOpt1 Ta med opsjon -1..9 (SCCS)
§append OptString 123456789
§fi
§if hasOptM Ta med opsjon -M FEID
§defbool hasFE t
§append OptString M:
§fi
§else hasSCCS
§defbool hasOptr nil
§defbool hasOptC nil
§defbool hasOpt1 nil
§defbool hasOptM nil
§defbool hasOptB nil
§fi hasSCCS
§do antOpt Antall opsjoner ekskl. -h
§ask optLtr§R§ Opsjonsbokstav nr. §R§
§if wArg§R§ Er det argument til opsjon nr.§R§
§append OptString §optLtr§R§§:
§ask optArg§R§ Argumentnavn §R§
§ask varNavn§R§ Variabelnavn for argument til opsjon nr.§R§ / blank
§ask altOptDesc§R§ Argumentbeskrivelse i syntakssammendrag / blank
§ifdef altOptDesc§R§
§define synOptDesc§R§ §altOptDesc§R§§
§else
§define synOptDesc§R§ §optArg§R§
§fi altOptDesc
§if repOpt§R§ Kan opsjon §R§ gjentas
§define rep§R§ [...]
§ask varDef§R§ Startverdi for var §R§
§define gopt§R§ "$§varNavn§R§§ $OPTARG"
§else repOpt
§ask varDef§R§ Defaultverdi for var §R§
§define gopt§R§ "$OPTARG"
§define rep§R§
§fi repOptR
§ifdef varDef§R§
§if docvarDef§R§ Dokumentere defaultverdien
§rem husk det!
§fi docvarDefR
§fi varDefR
§define optype§R§ STD
§if mand§R§ Er opsjon nr.§R§ obligatorisk
§rem ok
§else mand
§append SyntaxHelp [
§fi mand
§append SyntaxHelp -§optLtr§R§§ §optArg§R§§ §rep§R§§
§if mand§R§
§rem OK
§else mand
§append SyntaxHelp ]
§fi mand
§else not wArgR
§define optArg§R§
§define rep§R§
§defbool repOpt§R§ nil
§defbool mand§R§ nil
§ask varNavn§R§ Variabelnavn for opsjon nr.§R§ / blank
§define gopt§R§ 1
§define optype§R§ i
§define varDef§R§ 0
§append OptString §optLtr§R§§
§append SyntaxHelp [-§optLtr§R§§]
§fi wArg
§ifdef varDef§R§
§if varDoc§R§ Egen dokumentasjon av variabel §R§
§rem OK
§fi varDoc
§else varDef
§defbool varDoc§R§ nil
§fi varDef
§ask descOpt§R§ Beskrivelse av opsjon nr.§R§
§ask specGetOpt§R§ Getoptskode uten ;; / blank
§ask addGetopt§R§ Øvrige opsjoner (x|y|z... / blank)
§done antOpt
§defbool mandArgs nil
§rem ----------------------------------------------------------------
§do antMandParam Antall OBLIGATORISKE tilleggsparametere
§defbool mandArgs t
§ask paramM§R§ Parameternavn §R§
§ask paramMvar§R§ Variabelnavn for param.§R§
§ask altParamMdesc§R§ Blank eller alt. syntaksbeskrivelse for param.§R§
§ask defVM§R§ Defaultverdi for variabel
§ask paramMdesc§R§ Kort beskrivelse av argumentet
§ifdef altParamMdesc§R§
§append SyntaxHelp §altParamMdesc§R§§
§else
§append SyntaxHelp §paramM§R§§
§fi
§if repMandArg§R§ Kan parameter §R§ gjentas
§append SyntaxHelp [...]
§fi
§done antMandParam
§do antParam Antall VALGFRIE tilleggsparametere
§ask param§R§ Parameternavn §R§
§ask paramOvar§R§ Variabelnavn for param.§R§
§ask altParamOdesc§R§ Blank eller alt. syntaksbeskrivelse for param.§R§
§ask defVO§R§ Defaultverdi for variabel
§ask paramOdesc§R§ Kort beskrivelse av argumentet
§append SyntaxHelp [
§ifdef altParamOdesc§R§
§append SyntaxHelp §altParamOdesc§R§§
§else
§append SyntaxHelp §param§R§§
§fi
§if repOptArg§R§ Kan parameter §R§ gjentas
§append SyntaxHelp [...]
§fi
§append SyntaxHelp ]
§done antParam
§ask pkg Hvilken pakke
§if xmlLangNo Norsk
§define xmlLang no
§define wdOpprettet Opprettet
§define wdOption opsjon
§else
§define wdOpprettet Created
§define wdOption option
§if xmlLangEn Engelsk
§define xmlLang en
§else
§ask xmlLang Språkkode
§fi xmlLangEn
§fi xmlLangNo
§rem ----------------------------------------------------------------
<utility
    id="§ScriptName§"
§if useSCCSvers
    version="§SCCSFileID§"
§else
    version="§ScriptName§ §SCCSFileID§"
§fi
    verno="§SCCSverno§"
    verstr="§SCCSid§"
    date="§SCCSFileDate§"
    state="§sstate§"
    system="§SPE§"
§ifdef pkg
    pkg="§pkg§"
§fi
§if stdIncl Bruke standard includefil
§rem OK
§else
    stdincl='no'
§fi
§ifdef xmlLang
    lang="§xmlLang§"
§fi
    specver="1"
    >
    <shortdesc>§Description§</shortdesc>
    <description>
       §Description§ !!!
    </description>
    <author>§User§</author>
§ask compName Firmanavn / blank
§ifdef compName
    <company>§compName§</company>
§fi
    <copyright fromYear="§ThisYear§" toYear="§ThisYear§">
§if xmlLangNo
        Ingen distribusjon uten tillatelse fra forfatteren.
§else
        No distribution without written consent from the author.
§fi xmlLangNo
       <br /><a href="mailto:Lars.Reed@mesan.no">Lars Reed</a>
    </copyright>
    <!-- **************************************************************** -->
    <history>
	<revinfo
	    rev="$Revision$"
	    author="$Author$"
	    date="$Date$"
	    state="$State$"
	    name="$Name$">
	    <revid>$Id$</revid>
	    <revlock>$Locker$</revlock>
	    <revlog><![CDATA[
$Log$
	    ]]></revlog>
	</revinfo>
§define hMaxR 0
§define currVerDfl 1.
§default hChange1 §wdOpprettet§
§default currVerChange §wdOpprettet§
§do noXhist Antall histrec i tillegg til den siste
§define hMaxR §R§
§default currVerChange ...
§def1 hState§R§ rel
§ask hState§R§ Tilstand §R§ (exp|rel|obsolete)
§ask hDate§R§ Dato §R§
§default hVer§R§ 1.§R§
§ask hVer§R§ Versjon §R§
§def1 hComp§R§ §compName§
§ask hComp§R§ Firma §R§
§def1 hUser§R§ §User§
§ask hUser§R§ Bruker §R§
       <histrec state="§hState§R§§">
§ifdef hVer§R§
           <version>§hVer§R§§</version>
§fi
§ifdef hDate§R§
           <date>§hDate§R§§</date>
§fi
§ifdef hComp§R§
           <author comp="§hComp§R§§">§hUser§R§§</author>
§else
           <author>§hUser§R§§</author>
§fi hComp
§ask hChange§R§ Endring §R§
	   <description>§hChange§R§§</description>
       </histrec>
§done noXhist
§define currVersub (eval (prin1-to-string (1+ §hMaxR§)))
§append currVerDfl §currVersub§
§default currVerno §currVerDfl§
       <histrec state="§sstate§">
§ask currVerno Versjonsnummer siste versjon
           <version>§currVerno§</version>
           <date>§Date§</date>
§ifdef compName
           <author comp="§compName§">§User§</author>
§else
           <author>§User§</author>
§fi compName
	   <description>
§ask currVerChange Siste endring
	       §currVerChange§
	   </description>
       </histrec>
   </history>
   <!-- **************************************************************** -->
§if wCustList Ta med kundeliste
   <customers general="§general§">
§do noCustList Antall kunder i listen
§asku custID§R§ ID, kunde nr.§R§
§ask custName§R§ Navn, kunde nr.§R§
       <customer id="§custID§R§§"
		 verstr="@@(#) @SCCSID@>"
		 active="yes">§custName§R§§</customer>
§done
   </customers>
   <!-- **************************************************************** -->
§fi wCustList

   <strings>
      <string id="s1">!!!</string>
   </strings>
   <!-- **************************************************************** -->

§rem ----------------------------------------------------------------
   <doc>
§if InclOrigDoc Lime inn gammel dok-file
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
§include §ScriptName§.dok
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
§fi
      <syntax
§if isGUI Er dette GUI
	  GUI="yes"
§else
§if isLIB Er dette et bibliotek
	  lib="yes"
§else
§if moreGetopt Er det getopts-opsjoner som ikke behandles spesifikt
§ask moreGetoptDef Angi opsjonsbokstaver+evt kolon
	  addGetopt="§moreGetoptDef§"
§fi moreGetopt
§fi isLIB
§fi isGUI
	  >
	 <!-- <syntaxdiag href="..." [id="..."] /> -->
	 <optgroup>
	    <!-- <description>!!!</description> -->
            <option opt="h" mult="0" argmult="0" type="NONE">
	       <shortdesc><stringref std="sHelp"/></shortdesc>
	       <getopts>Help 0</getopts>
	    </option>
§if hasOptr
            <option opt="r" mult="0" argname="SID" argdesc="SID" argmult="1"
	       type="STD" varname="rel" defval="$RELEASE" docdefval="yes">
	       <shortdesc>Angi SCCS-versjon</shortdesc>
	       <description>
		   <fragref std="yes" refto="fragOptR"/>
	       </description>
	       <getopts>rel="-r$OPTARG"</getopts>
	    </option>
§fi hasOptr
§if hasOpt1
            <option opt="1" mult="0" argmult="0" type="i" varname="rel1"
               addGetopt="2|3|4|5|6|7|8|9">
	       <shortdesc>Tilsv -rX der X er "siste ... filnavn"</shortdesc>
	       <description>
		   <fragref std="yes" refto="fragOpt1"/>
	       </description>
	       <vardoc>
		   For opsjonene <optref opt="1"/>...-9 - antall
		   versjoner tilbake.
	       </vardoc>
	       <getopts>let rel1=$opt</getopts>
	    </option>
§fi hasOpt1
§if hasOptB Ta med opsjon -B
            <option opt="B" mult="0" type="i" varname="runlocal" defval="0">
	       <shortdesc>Angir lokal kjøring</shortdesc>
	       <description>
		   <fragref refto="fragOptB" std="yes" nlafter="yes"/>
	       </description>
	       <getopts>let runlocal=1</getopts>
	    </option>
§fi hasOptB
§if hasOptC Ta med opsjon -C
	    <option opt="C" mult="0" argname="dir" argmult="1" type="STD"
		    varname="cfg">
		<shortdesc>Angi katalogtre (ikke SCCS)</shortdesc>
		<description>
		    <fragref std="yes" refto="fragOptC"/>
		</description>
		<getopts>cfg="$OPTARG"</getopts>
	    </option>
§fi hasOptC
§if hasOptM
            <option opt="M" mult="0" argname="FEid" argmult="1"
	       type="STD" varname="FEid">
	       <shortdesc>Angi feil/endringsnummer</shortdesc>
	       <description>
		   <fragref std="yes" refto="fragOptM"/>
	       </description>
	       <getopts>FEid="$OPTARG"
	    if FEvalid none "$FEid"; then
	       sccsOpt="$sccsOpt -m$FEid"
	    else
	       exit <retstat value="109"/> # FE-feil
	    fi</getopts>
	    </option>
§fi
§do antOpt
            <option
	       opt="§optLtr§R§§"
§if mand§R§
§if repOpt§R§
	       mult="1x"
§else repOpt
	       mult="1"
§fi repOpt
§else mand
§if repOpt§R§
	       mult="0x"
§else repOpt
	       mult="0"
§fi repOpt
§fi mand
§if wArg§R§
	       argname="§optArg§R§§"
§ifdef altOptDesc§R§
               argdesc="§altOptDesc§R§§"
§fi
	       argmult="1"
§else wArg
	       argmult="0"
§fi wArg
	       type="§optype§R§§"
§ifdef varNavn§R§
	       varname="§varNavn§R§§"
§fi varNavn
§ifdef addGetopt§R§
               addGetopt="§addGetopt§R§§"
§fi addGetopt
§ifdef varDef§R§
	       defval="§varDef§R§§"
§if docvarDef§R§
	       docdefval="yes"
§fi docvarDef
§fi varDef
               ><!-- othertype docdefval -->
		<shortdesc>§descOpt§R§§</shortdesc>
		<description>
		    §descOpt§R§§ !!!
		</description>
§if varDoc§R§
		<vardoc>!!!</vardoc>
§fi varDoc
§ifdef specGetOpt§R§
		<getopts>§specGetOpt§R§§</getopts>
§else
		<getopts>§varNavn§R§§=§gopt§R§§</getopts>
§fi
	    </option>
§done antOpt
§do antMandParam
	    <argument
	       argname="§paramM§R§§"
§if repMandArg§R§
	       argmult="1x"
§else
	       argmult="1"
§fi
§ifdef altParamMdesc§R§
               argdesc="§altParamMdesc§R§§"
§fi
§ifdef paramMvar§R§
	       defval="§defVM§R§§"
	       varname="§paramMvar§R§§"
	       type="STD"
§fi paramMvar
	       >
	       <shortdesc>§paramMdesc§R§§</shortdesc>
	       <description>
		   §paramMdesc§R§§ !!!
	       </description>
	    </argument>
§done antMandParam
§do antParam
	    <argument
	       argname="§param§R§§"
§if repOptArg§R§
	       argmult="0x"
§else
	       argmult="0"
§fi
§ifdef altParamOdesc§R§
               argdesc="§altParamOdesc§R§§"
§fi
§ifdef paramOvar§R§
	       defval="§defVO§R§§"
	       varname="§paramOvar§R§§"
	       type="STD"
§fi paramOvar
	       >
	       <shortdesc>§paramOdesc§R§§</shortdesc>
	       <description>§paramOdesc§R§§ !!!</description>
	    </argument>
§done
	 </optgroup>
§if isLIB
	 <libopts></libopts>
§else
         <optset>&I; <optref opt="h" mult="1"/></optset>
§doR antSynGr Antall variasjoner over syntaks (ekskl. -h)
         <optset>
	    &I;
§doS antOptGr§R§ Antall opsjoner i gruppe §R§
§ask optref§S§_§R§ Opsjonsnavn nr.§S§
	    <optref opt="§optref§S§_§R§§" mult="1"/>
§doneS antOptGr§R§
§doS antArgGr§R§ Antall ARGUMENTER (ikke opsjoner) i gruppe §R§
§ask argref§S§_§R§ Argumentnavn nr.§S§
	    <argref arg="§argref§S§_§R§§" argmult="1"/>
§doneS antOptGr§R§
         </optset>
§doneR antSynGr
§fi isLIB
      </syntax>
      <!-- ************************************************************* -->

      <!-- ............................................................. -->
      <samples> <!-- Syntaks: §SyntaxHelp§ -->
§do antSynGr
         <sample><!-- no,id,ugly='yes' -->
	    <description>For å !!!</description>
	    <sin>&I; !!!</sin>
	    <sout>!!!</sout>
         </sample>
§done antSynGr
      </samples>

      <!-- ............................................................. -->
      <notes>
§do antNotes Antall NB...
         <note warning="no">!!!</note>
§done
      </notes>

      <!-- ............................................................. -->
      <bugs>
§do antBugs Antall bugs...
         <bug><!-- bugid -->!!!</bug>
§done
      </bugs>

      <!-- ............................................................. -->
      <messages>
	  <message stdref="msgOptArg"/>
	  <message stdref="msgUnknownOpt"/>
	  <message stdref="msgMandArg"/>
§if hasFE Bruker FE-systemet
          <message stdref="msgFE"/>
§else
<!--          <message stdref="msgFE"/> -->
§fi hasFE
§if hasOptB
          <message stdref="msgCreSccs"/>
§else
<!--          <message stdref="msgCreSccs"/> -->
§fi hasOptB
<!--          <message stdref="msgClosed"/> -->
§do antMsgs Antall meldinger...
	  <message>
	      <text><stringref s="!!!"/><nbsp/><var>!!!</var></text>
	      <description>!!!</description>
	  </message>
§done
      </messages>

      <!-- ............................................................. -->
      <filerefs>
         <fileref>/bin/ksh</fileref>
         <fileref url="!!!">bla</fileref>
         <manref section="1">!!!</manref>
         <manref section="1L" local="yes">!!!</manref>
	 <envvar var="SPE_HOME"> må <b>alltid</b> være satt!</envvar>
      </filerefs>

      <!-- ............................................................. -->
      <seealso>
§do antAlso Antall se også...
         <also>!!!</also>
§done
      </seealso>

      <!-- ............................................................. -->
      <retstats> <!-- nostd='yes' -->
      </retstats>

      <!-- ............................................................. -->
      <sysdoc include="yes"></sysdoc>

      <!-- ............................................................. -->
      <instdoc include="no"/>
   </doc>
   <!-- **************************************************************** -->

   <fileset>
      <file id="fHtml" class="html"
	    relDir="html" sfx=".html" mode="444"
	    desc="standard dokumentasjon"/>
      <file id="fInf"  class="inf" install="no"
	    sfx=".inf"
	    desc="installasjonsfil"/>

      <!-- extref url=...  mime=... base=... pfx=!!! sfx=!!! desc=!!! -->

      <!-- ............................................................. -->
      <!-- Dette er selve scriptet                                       -->
      <!-- ............................................................. -->
      <file id="fMain" shell="ksh" class="sh"
	    mode="555"
	    desc="hovedscriptet">
§if hasFE Bruker FE
§define inclFE inclFE="yes"
§else
§define inclFE
§fi
<inclKshIntro §inclFE§/>
<alias name="Error" class="std"/>
<alias name="ErrorExit" class="std"/>

<alias name="AWK" class="std"/> <!-- ??? -->
§if hasSCCS Bruker SCCS
<alias name="SCCS" class="std"/>
<alias name="SCCSLOG" class="std"/>
§fi
§do noTempFi Antall tempfiler utover standard
<tempfile varname="tmpf§R§">Temp.fil for ???</tempfile>
§done noTempFi
§if needTempDir Trengs EGEN temp.katalog
<tempdir varname="tmpd">Temp.katalog ... </tempdir>
§fi needTempDir
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
# <sysdoc>Dette <b>burde</b> huskes</sysdoc>
# <instdoc>Ved installasjon...</instdoc>
# <envvar var="SPE_HOME" dollar="no" brace="yes"/>/!!!
# <globvar varname="x" type="STD" defval="4">Bla bla</globvar>
# <![CDATA[<&>]]>
# <alias name="x" defval="cmd" desc="!!!">doc</alias>
# <function name="x" type="VOID"> <shortdesc/><description/> <fparam name= defval= type= othertype=/>*<fbody/>
# !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

§if wBSQLM Trengs funksjon for å kjøre bsqlm
<globvar name="bsqlmP" type="STD" defval="tvist">
   Passord til Mimer
</globvar>
<globvar name="bsqlmU" type="STD" defval="TVIST" docdefval="yes">
   Brukernavn til Mimer
</globvar>
<globvar name="bsqlmD" type="STD" defval="$MIMER_DATABASE" docdefval="yes">
   Mimer database
</globvar>
<globvar name="bsqlmR" type="i" defval="0">
   &gt;0 hvis Mimer konfig er lest
</globvar>
<globvar name="bsqlmN" type="i" defval="1" docdefval="yes">
   Default repository
</globvar>
§fi
§if yncFunc Trengs yesNoCancel-funksjon

<function name="yesNoCancel" type="i">
    <shortdesc>Spør ja/nei/avbryt-spørsmål</shortdesc>
    <returns>
	0 for ja, 1 for nei, (3 for avbryt - normalt vil scriptet
	avbryte automatisk her)
    </returns>
    <fparam name="prompt" mult="1x" type="STD">
	Spørsmål som skal stilles</fparam>
    <fbody>
    <fragref refto="fragYNC" std="yes"/>
    </fbody>
</function>
§fi
§if stdIncl
§rem har funksjonen fra før
§else

<function name="ErrorExit" type="VOID">
§if xmlLangNo
   <shortdesc>Avbryt med feilmelding.</shortdesc>
   <fparam name="errCode" type="i">Returkode</fparam>
   <fparam name="msg" type="i" mult="1x">Meldingstekst</fparam>
§else
   <shortdesc>Abort execution with error message.</shortdesc>
   <fparam name="errCode" type="i">Error code</fparam>
   <fparam name="msg" type="i" mult="1x">Message text</fparam>
§fi xmlLangNo
   <fbody>
   <fragref refto="fragAltErrExit" std="yes"/>
   </fbody>
</function>
§fi

<inclHelp/>

§if mandArgs
<inclGetopts mandArgs="§antMandParam§"
§else
<inclGetopts
§fi mandArgs
§if hasPkg Bruker pakker
    inclPkg="yes"
§fi hasPkg
    />
§if Signals Inkludere signalhåndtering

<inclTrap cleaner="Clean"
§if inclExitTrap Ta med trap ved vanlig exit
	  exit="yes"
§else
	  exit="no"
§fi
§if inclStdClean Standard Clean-funksjon
	  stdClean="yes"/>
§else
	  >
<function name="Clean" type="VOID">
§if xmlLangNo
   <shortdesc>Rydd opp ved avbrudd.</shortdesc>
§else
   <shortdesc>Cleanup on interrupt.</shortdesc>
§fi xmlLangNo
   <fbody>
   rm -f $tmpf !!!!!!!!!!!!!!!!!!!!!!!
   exit $retStat
   </fbody>
</function>
</inclTrap>
§fi inclStdClean
§fi Signals
§if needTempDir
mkdir -p $tmpd
§fi needTempDir
§if wBSQLM

<function name="readSysModels" type="VOID">
   <shortdesc>Finn påloggingsparametere til Mimer</shortdesc>
   <description>Funksjonen leser <fileref><envvar
      var="SYSTEMATOR5"/>/sys_models</fileref> for å finne
      base/bruker/passord for gitt repository device.  Setter
      <code>bsqlmR</code> til 1 når data er lest.</description>
   <fparam name="repNo" type="i" defval="1">Repository nummer</fparam>
   <fbody>
   AWK '$1=='$1' { print $2,$3,$4 }' <envvar var="SYSTEMATOR5"/>/sys_models |
      read bsqlmD bsqlmU bsqlmP
      bsqlmR=1
   </fbody>
</function>

<function name="runbsqlm2" type="VOID">
   <shortdesc>Kjør BSQLM og plukk ut reell output</shortdesc>
   <fbody>
   bsqlm | AWK '/-- BOQ/ { getline; getline; getline; getline; flag= 1 }
                 /-- EOQ/ { flag=0}
                 / rows? found *$/ { flag=0 }
                 flag &amp;&amp; $0~/[^ ]/ {printf("\t%s\n", $1)}' | sort
   </fbody>
</function>

<function name="runbsqlm1" type="VOID">
   <shortdesc>Kjør std. input gjennom BSQLM</shortdesc>
   <description>Funksjonen sender brukernavn, passord, standard input
   og avsluttende semikolon til BSQLM, med markører som kan brukes av
   <code>bsqlm2</code> for å plukke output.</description>
   <fbody>
   print "${bsqlmU}\n${bsqlmP}"
   cat
   cat &lt;&ltSQL
-- BOQ
;
-- EOQ
exit;
SQL
   </fbody>
</function>

<function name="runBsqlm" type="VOID">
   <shortdesc>Slår opp i sys_models, kjører kommando i BSQLM</shortdesc>
   <description>Første gang funksjonen kalles, kjøres
      <code>readSysModels</code> for å få tak i brukernavn/passord etc.
      Deretter kalles <code>bsqlm1</code> for å kjøre en query, og
      <code>bsqlm2</code> for å trekke ut resultatet.</description>
   <fbody>
   [[ $bsqlmR &gt; 0 ]] || readSysModels $bsqlmN
   export <envvar var="MIMER_DATABASE" dollar="no"/>=$bsqlmD
   runbsqlm1 $* | runbsqlm2
   </fbody>
</function>

§fi

!!!!!!! kode her !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
§if inclOrig Inkludere originalt script
§include §ScriptName§

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
§fi

<inclKshExit/>
      </file>
§if doOldCompat Ta med utfylte maler etter gammelt mønster
      <file id="fMainOld" shell="ksh" class="sh" sfx=".osh"
	    install="no"
	    desc="script generert med gammel standard">
         <!-- FILE: §ScriptName§ -->
#!/bin/ksh
# -----------------------------------------
# §ScriptName§
# §Description§
# -----------------------------------------
# Sign.:  §User§, §Date§
# Endret:
#
typeset -r I=${0##*/}   # Scriptets navn
typeset -r Ver="§SCCSid§"
typeset -r SYNTAX="§SyntaxHelp§ | -h"
typeset    OptString="§OptString§"
typeset -i retStat=0
§if wBSQLM Trengs funksjon for å kjøre bsqlm
typeset    bsqlmP="tvist" \
           bsqlmU="TVIST" \
           bsqlmD="$MIMER_DATABASE"
typeset -i bsqlmR=0 \
           bsqlmN=1  # repDev
§fi
§do antOpt
§if wArg§R§
typeset    §varNavn§R§§="§varDef§R§§"
§else wArg
typeset -i §varNavn§R§§=§varDef§R§§
§fi
§done

alias Error='print -u2 "$I:"'

function Help { # exitCode
   cat &lt;&lt;TEXT
*** $I, versjon $Ver ***
Syntaks:  $I $SYNTAX
          -h: gi hjelptekst (denne)
§do antOpt
§if wArg§R§
          -§optLtr§R§§ §optArg§R§§: §descOpt§R§§  (default: $§varNavn§R§§)
§else
          -§optLtr§R§§: §descOpt§R§§
§fi wArgR
§done antOpt
§do antMandParam
§if repMandArg§R§
          §paramM§R§§ [...]: §paramMdesc§R§§
§else
          §paramM§R§§: §paramMdesc§R§§
§fi
§done
§do antParam
§if repOptArg§R§
          §param§R§§ [...]: §paramOdesc§R§§
§else
          §param§R§§: §paramOdesc§R§§
§fi
§done
TEXT
   exit $1
}
§if YesNoCancel Inkludere readYN-funksjon


function readYN { # prompt
   typeset -u r
   while true; do
      read r?"$* (j/n)? "
      case "$r" in
         ([JY]) return 0;;
         (N)    return 1;;
         (*)    print -u2 "Svar J eller N!";;
      esac
   done
}
§fi


# --------------
# Parametersjekk
# --------------
while getopts $OptString opt; do
   case "$opt" in
      (h)  Help 0;;
§do antOpt
§if wArg§R§
§if repOpt§R§
      (§optLtr§R§§) !!! §varNavn§R§§="$§varNavn§R§§ $OPTARG" ;;  # §optArg§R§§
§else
      (§optLtr§R§§) !!! §varNavn§R§§="$OPTARG"        ;;  # §optArg§R§§
§fi
§else
      (§optLtr§R§§) !!! §varNavn§R§§=1;;
§fi
§done
      (:)  Error "mangler argument til $OPTARG  (-h for hjelp)"
           exit 101;;
      (\?) Error "ukjent opsjon -- $OPTARG  (-h for hjelp)"
           exit 101;;
   esac
done
shift $OPTIND-1

§if mandArgs
if [ $# -lt §antMandParam§ ]; then
   Error "mangler parametere!\nSyntaks:  $I $SYNTAX"
   return 1
fi

§fi mandArgs
§if Signals Inkludere signalhåndtering
# ----------------
# Signalhåndtering
# ----------------
trap "!!!!!!" HUP INT QUIT TERM
trap "!!!!!!" EXIT

§fi Signals

§if wBSQLM
function readSysModels { # repNr
   AWK '$1=='$1' { print $2,$3,$4 }' $SYSTEMATOR5/sys_models |
      read bsqlmD bsqlmU bsqlmP
      bsqlmR=1
}

function runbsqlm2 {
   bsqlm | AWK '/-- BOQ/ { getline; getline; getline; getline; flag= 1 }
                /-- EOQ/ { flag=0}
                / rows? found *$/ { flag=0 }
                flag &amp;&amp; $0~/[^ ]/ {printf("\t%s\n", $1)}' | sort
}

function runbsqlm1 {
   print "${bsqlmU}\n${bsqlmP}"
   cat
   cat &lt;&lt;SQL
-- BOQ
;
-- EOQ
exit;
SQL}

function runBsqlm {
   [[ $bsqlmR &gt; 0 ]] || readSysModels $bsqlmN
   export MIMER_DATABASE=$bsqlmD
   runbsqlm1 $* | runbsqlm2
}

§fi

!!!!!!!!!!!!!!!!!!!!!

exit $retStat

# ---------------------
# Slutt: §SCCSFileID§
# ---------------------
         <!-- FILE: §ScriptName§.xml ! -->
      </file>
§fi doOldCompat
§do antAwk Antall awk-filer
§ask awkName§R§ Delnavn, awk-fil nr.§R§
§ask descAwk§R§ Beskrivelse av fila

      <!-- ............................................................. -->
      <!-- §ScriptName§§awkName§R§§.awk -->
      <!-- ............................................................. -->
      <file
         id="fAwk§R§"
         sfx="§awkName§R§§.awk"
         class="sh"
	 shell="awk"
	 mode="444"
         relDir="awklib"
	 desc="§descAwk§R§§">
         <!-- FILE: §ScriptName§§awkName§R§§.awk -->
# ---------------------------------------------------------------------
# §ScriptName§§awkName§R§§  §SCCSid§
# §descAwk§R§§
# ---------------------------------------------------------------------

BEGIN { }
/./   { }
END   { }

§if inclOrigAwk§R§ Inkludere originalt awkscript(§ScriptName§§awkName§R§§.awk)
§include §ScriptName§§awkName§R§§.awk
§fi
# Slutt - §SCCSid§
         <!-- FILE: §ScriptName§.xml ! -->
      </file>
§done
§if doOldCompat

      <!-- ............................................................. -->
      <!-- ASCII-dokumentasjon                                           -->
      <!-- ............................................................. -->
      <file id="fDocOld" sfx=".dokold" class="plain" install="no"
	    desc="tekstdokumentasjon etter gammel standard">
         <!-- FILE: §ScriptName§.dok -->
SCRIPT: §ScriptName§                                        Sign: §User§, §Date§
========================                       Siste endring:

FORMÅL
   §Description§


SYNTAKS
   §ScriptName§ §SyntaxHelp§
   §ScriptName§ -h


BESKRIVELSE
   §Description§


PARAMETERE
   -h:   §ScriptName§ gir et syntakssammendrag og avslutter
§do antOpt

§if wArg§R§
   -§optLtr§R§§ §optArg§R§§: §descOpt§R§§  (default: §varDef§R§§)
§else
   -§optLtr§R§§: §descOpt§R§§
§fi wArgR
§done antOpt
§do antMandParam

§if repMandArg§R§
   §paramM§R§§ [...]: §paramMdesc§R§§
§else
   §paramM§R§§: §paramMdesc§R§§
§fi
§done
§do antParam

§if repOptArg§R§
   §param§R§§ [...]: §paramOdesc§R§§
§else
   §param§R§§: §paramOdesc§R§§
§fi
§done


EKSEMPLER
   1 %  §ScriptName§ §SyntaxHelp§


MERK!


FEILMELDINGER


BUGS


FILER / VARIABLE
   §ScriptName§
§do antAwk
   §ScriptName§-§awkName§R§§.awk
§done


SE OGSÅ
         <!-- FILE: §ScriptName§.xml ! -->
      </file>

      <!-- ............................................................. -->
      <!-- Installasjon                                                  -->
      <!-- ............................................................. -->
      <file
         id="fInfOld"
         sfx=".infold"
         class="plain"
	 install="no">
         <!-- FILE: §ScriptName§.inf -->
 §ScriptName§
 _____________________________________________________________
 §Description§ (§User§, §Date§)

[divinst]
:S:§ScriptName§
:0:§Description§
::%S
:dok:%S.dok:444
§do antAwk
:awklib:%S-§awkName§R§§.awk
§done
:!:mv %S.inf $SPE_HOME/old/%S.inf
         <!-- FILE: §ScriptName§.xml ! -->
      </file>
§do antXfiles Antall øvrige filer
        <file
§default fId§R§ fId§R§
§ask fId§R§ ID
            id="§fId§R§§"
§rem Should have had ASKOPT !!!!
§ask fClass§R§ Class (html|sh|inf|dok|plain)
	    class='§fClass§R§§'
            install='yes'
§ask shell§R§ Shell (sh/ksh/awk/other/blank)
§ifdef shell§R§
            shell="§shell§R§§"
§fi
§default fMode§R§ 551
§ask fMode§R§ Chmod or blank
§ifdef fMode§R§
            mode="§fMode§R§§"
§fi
§ask rDir§R§ Relativ katalog / blank
§ifdef rDir§R§
            relDir="§rDir§R§§"
§fi
§default fPfx§R§
§ask fPfx§R§ Prefiks/blank
§ifdef fPfx§R§
            pfx="§fPfx§R§§"
§fi
§ask fSfx§R§ Suffiks/blank
§ifdef fSfx§R§
            sfx="§fSfx§R§§"
§fi
	    ><!-- desc,base -->
        </file>
§done
§fi doOldCompat
    </fileset>
</utility>
